#
# wm independent hotkeys
#

# terminal emulator
super + Return
	kitty

ctrl + shift + Escape
	gnome-system-monitor

# terminal webbrowser
super + shift + Return
	gtk-launch "$(xdg-settings get default-web-browser)"

# file browser
{super + shift + n,super + e}
	nemo

# program launcher
{super + shift + @space,alt + F2}
	dmenu_run -b

super + space
	~/.config/polybar/scripts/launcher.sh

# make sxhkd reload its configuration files:
super + shift + Escape
	~/.config/polybar/scripts/powermenu.sh

super + shift + p
	~/.config/polybar/scripts/screensmenu.sh

super + Escape
	pkill -USR1 -x sxhkd

#
# bspwm hotkeys
#

# toggle polybar
super + x
    ~/.config/bspwm/scripts/polybar_toggle.sh

# quit/restart bspwm
super + ctrl + alt + {q,r}
	bspc {quit,wm -r}

# close and kill
super + {shift,alt} + q
	bspc node -{c,k} && bspc desktop -l tiled

# alternate between the tiled and monocle layout
super + m
	bspc desktop -l next

# send the newest marked node to the newest preselected node
super + y
	bspc node newest.marked.local -n newest.!automatic.local

# swap the current node and the biggest window
super + g
	bspc node -s biggest.window

# rotate
super + r
	bspc node @parent -R 90

#
# state/flags
#

# set the window state
super + {t,shift + t,shift+f,f}
	bspc node -t {tiled,pseudo_tiled,\~floating,\~fullscreen}

# set the node flags
super + ctrl + {m,x,y,z}
	bspc node -g {marked,locked,sticky,private}

#
# focus/swap
#

# focus the node in the given direction
super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
super + {p,b,comma,period}
	bspc node -f @{parent,brother,first,second}

# focus the next/previous window in the current desktop
super + {_,shift + }c
	bspc node -f {next,prev}.local.!hidden.window
alt + {_,shift + }Tab
	bspc node -f {next,prev}.local.!hidden.window

# focus the next/previous desktop in the current monitor
super + {dead_grave,less,a,z,plus,s}
	bspc desktop -f {prev,prev,prev,next,next,next}.local

# send the next/previous desktop in the current monitor
super + shift + {dead_grave,less,a,z,plus,s}
	bspc node -d {prev,prev,prev,next,next,next}.local --follow

# focus the last node
super + q
	~/.config/bspwm/scripts/last_node_same_monitor.sh

# focus the last desktop
super + Tab
	~/.config/bspwm/scripts/last_desktop_same_monitor.sh

# move to last monitor
super + masculine
	bspc monitor -f next

super + shift + masculine
	~/.config/bspwm/scripts/move_to_other_monitor.sh

# swap monitors
super + ctrl + masculine
	~/.config/bspwm/scripts/swap_monitors_all.sh

# swap monitors
super + alt + ctrl + masculine
	~/.config/bspwm/scripts/swap_monitors_all.sh

# move to empty desktops
super + {_,shift + }w
	~/.config/bspwm/scripts/move_to_empty_desktop.sh {_,monitor}

# focus the older or newer node in the focus history
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

# focus to the given desktop
super + {1-9,0}
	~/.config/bspwm/scripts/go_to_numbered_desktop.sh {1-9,10}

# send to the given desktop
super + shift + {1-9,0}
	~/.config/bspwm/scripts/go_to_numbered_desktop.sh {1-9,10} move
	
# focus next/prev monitor
super + {dead_acute,ccedilla}
	bspc monitor -f {west,east}
	
# move to next/prev monitor
super + shift + {dead_acute,ccedilla}
	bspc node -m {west,east} --follow
	
# swap monitors
super + ctrl + shift + {dead_acute,ccedilla}
	bspc monitor -s {west,east}


#
# preselect
#

# preselect the direction
super + alt + {h,j,k,l}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + alt + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + alt + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
super + alt + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# expand a window by moving one of its side outward
super + ctrl + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + ctrl + shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}
	

#
# control sound
#

super + {_,shift +}KP_Add
	pactl set-sink-volume $(pactl get-default-sink) {+5%,+20%}

super + {_,shift +}KP_Subtract
	pactl set-sink-volume $(pactl get-default-sink) {-5%,-20%}

super + KP_Multiply
	pactl set-sink-mute $(pactl get-default-sink) toggle

super + shift + KP_Multiply
	~/.config/bspwm/scripts/sound_switch.sh

# media keys
XF86AudioRaiseVolume
    pactl set-sink-volume $(pactl get-default-sink) +5%

XF86AudioLowerVolume
    pactl set-sink-volume $(pactl get-default-sink) -5%

XF86AudioMute
    pactl set-sink-mute $(pactl get-default-sink) toggle


#
# screen-shots
#

# Copy whole screen capture to clipboard
@Print
	scrot -e 'xclip -selection clipboard -t image/png -i $f; rm $f'

# Save whole screen capture
super + @Print
	cd $HOME/Pictures && scrot

# Save window capture and copy it to clipboard
alt + super + @Print
	cd $HOME/Pictures && scrot -u -e 'xclip -selection clipboard -t image/png -i $f'

# Copy window capture to clipboard/Save window capture
{_,super + }ctrl + @Print
	cd $HOME/Pictures && scrot -u {-e 'xclip -selection clipboard -t image/png -i $f; rm $f',_}

# Copy selection capture to clipboard/Save selection capture
{_,super + }shift + @Print
	cd $HOME/Pictures && scrot -f -s {-e 'xclip -selection clipboard -t image/png -i $f; rm $f',_}
