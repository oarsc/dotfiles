#!/bin/bash

#####################################################
#   ██████╗ ███████╗██████╗ ██╗    ██╗███╗   ███╗   #
#   ██╔══██╗██╔════╝██╔══██╗██║    ██║████╗ ████║   #
#   ██████╔╝███████╗██████╔╝██║ █╗ ██║██╔████╔██║   #
#   ██╔══██╗╚════██║██╔═══╝ ██║███╗██║██║╚██╔╝██║   #
#   ██████╔╝███████║██║     ╚███╔███╔╝██║ ╚═╝ ██║   #
#   ╚═════╝ ╚══════╝╚═╝      ╚══╝╚══╝ ╚═╝     ╚═╝   #
#####################################################


BASEDIR=$(dirname "$0")


#  █▀█ █▀▀ █▀█ █▀ █▀█ █▄ █ ▄▀█ █     █▀▀ █▀█ █▄ █ █▀▀ █ █▀▀
#  █▀▀ ██▄ █▀▄ ▄█ █▄█ █ ▀█ █▀█ █▄▄   █▄▄ █▄█ █ ▀█ █▀  █ █▄█
# ----------------------------------------------------------

# Keyboard configurations
xset r rate 250 40
ibus-daemon -drx

# Mouse configurations
xinput set-prop 'Logitech G502 HERO SE' 'libinput Accel Speed' 1
xsetroot -cursor_name left_ptr

# Monitor configurations
xset s 3600
xset -dpms

# Wallpaper
feh --bg-fill $BASEDIR/wallpaper.jpg --image-bg "#050505"

# Sound device
pactl set-default-sink 'alsa_output.pci-0000_00_1f.3.analog-stereo'

# Initialization
pgrep -x sxhkd > /dev/null || sxhkd -m 1 &
pgrep -x picom > /dev/null || picom -f --daemon --config "$HOME/.config/picom/picom.conf" &

$BASEDIR/startup.sh &
$HOME/.config/polybar/launch.sh &


#  █▄▄ █▀ █▀█ █ █ █ █▀▄▀█   █▀▀ █▀█ █▄ █ █▀▀ █ █▀▀
#  █▄█ ▄█ █▀▀ ▀▄▀▄▀ █ ▀ █   █▄▄ █▄█ █ ▀█ █▀  █ █▄█
# -------------------------------------------------

if type "xrandr"; then

  MONITORS=$(xrandr --query | grep " connected" | grep "+" | cut -d" " -f1 | tr '\n' ' ');
  IFS=' ' read -r -a ARR_MONITORS <<< "$MONITORS"

  bspc wm -O $MONITORS
  bspc monitor ${ARR_MONITORS[0]} -d I II III IV V VI VII VIII

  if [ ${ARR_MONITORS[1]} ]; then
    bspc monitor ${ARR_MONITORS[1]} -d IX X XI XII XIII XIV XV XVI
  fi

else
  bspc monitor -d I II III IV V VI VII VIII
fi

bspc config active_border_color "#555555"
bspc config focused_border_color "#AB47BC"
bspc config border_width         2
bspc config border_width         2
bspc config window_gap           10

bspc config split_ratio          0.5
bspc config single_monocle       true
bspc config borderless_monocle   true
bspc config gapless_monocle      true

wmname LG3D &
bspc rule -a android-studio border=off follow=on
bspc rule -a jetbrains-studio border=off follow=on
bspc rule -a ualth border=off
bspc rule -a Dlancockpit border=off state=tiled
#bspc rule -a Gimp desktop='^8' state=floating follow=on
#bspc rule -a Chromium desktop='^2'
#bspc rule -a mplayer2 state=floating
#bspc rule -a Kupfer.py focus=on
#bspc rule -a Screenkey manage=off



function setShadow {
  property="_COMPTON_SHADOW"

  if [ "$2" = true ]; then
    xprop -id "$1" -f $property 32c -set $property 1
  else
    xprop -id "$1" -remove $property
  fi
}

function handleShadows {
  nodes=$(bspc query -N -d "$2" -n '.tiled')

  if [ "$1" = "monocle" ]; then
    for node in $nodes; do
      setShadow "$node" false
    done
  else
    for node in $nodes; do
      setShadow "$node" true
    done
  fi
}


#  █▄▄ █▀ █▀█ █ █ █ █▀▄▀█   █▀ █ █ █▄▄ █▀ █▀▀ █▀█ █ █▀█ ▀█▀ █ █▀█ █▄ █ █▀
#  █▄█ ▄█ █▀▀ ▀▄▀▄▀ █ ▀ █   ▄█ █▄█ █▄█ ▄█ █▄▄ █▀▄ █ █▀▀  █  █ █▄█ █ ▀█ ▄█
# ------------------------------------------------------------------------

pkill -f "bspc subscribe"

bspc subscribe desktop_layout | while read -r _ _ desktopId status; do
  handleShadows "$status" "$desktopId"

  $HOME/.config/polybar/scripts/check-monocles.sh &
done &

bspc subscribe desktop_focus | while read -r _ _ desktopId; do
  layout=$(bspc query -T -d $desktopId | jq -r '.layout')
  handleShadows "$layout" "$desktopId"

  bspc query -D -d 'focused.!occupied' -m focused && bspc desktop -l tiled
  $HOME/.config/polybar/scripts/check-monocles.sh &
done &

bspc subscribe node_state | while read -r _ _ _ node state status; do
  if [[ "$state" == "floating" ]]; then
    case "$status" in
      off) setShadow "$node" false;;
      on) setShadow "$node" true;;
    esac
  fi
done &
